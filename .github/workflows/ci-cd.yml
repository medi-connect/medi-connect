name: Build and Deploy Microservices

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_PREFIX: srebrovn
  KUBE_NAMESPACE: default

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # Checkout the codebase
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: UserService
        run: |
          pwd
          ls -al
          cd api/UserService
          docker build -t $DOCKER_IMAGE_PREFIX/user-service:${{ github.sha }} .
          docker tag $DOCKER_IMAGE_PREFIX/user-service:${{ github.sha }} $DOCKER_IMAGE_PREFIX/user-service:latest
          docker push $DOCKER_IMAGE_PREFIX/user-service:${{ github.sha }}
          docker push $DOCKER_IMAGE_PREFIX/user-service:latest

      - name: DoctorService
        run: |
          cd api/DoctorService
          docker build -t $DOCKER_IMAGE_PREFIX/doctor-service:${{ github.sha }} .
          docker tag $DOCKER_IMAGE_PREFIX/doctor-service:${{ github.sha }} $DOCKER_IMAGE_PREFIX/doctor-service:latest
          docker push $DOCKER_IMAGE_PREFIX/doctor-service:${{ github.sha }}
          docker push $DOCKER_IMAGE_PREFIX/doctor-service:latest

      - name: FeedbackService
        run: |
          cd api/FeedbackService
          docker build -t $DOCKER_IMAGE_PREFIX/feedback-service:${{ github.sha }} .
          docker tag $DOCKER_IMAGE_PREFIX/feedback-service:${{ github.sha }} $DOCKER_IMAGE_PREFIX/feedback-service:latest
          docker push $DOCKER_IMAGE_PREFIX/feedback-service:${{ github.sha }}
          docker push $DOCKER_IMAGE_PREFIX/feedback-service:latest

      - name: AppointmentService
        run: |
          cd api/AppointmentService
          docker build -t $DOCKER_IMAGE_PREFIX/appointment-service:${{ github.sha }} .
          docker tag $DOCKER_IMAGE_PREFIX/appointment-service:${{ github.sha }} $DOCKER_IMAGE_PREFIX/appointment-service:latest
          docker push $DOCKER_IMAGE_PREFIX/appointment-service:${{ github.sha }}
          docker push $DOCKER_IMAGE_PREFIX/appointment-service:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Checkout the codebase
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up kubectl
      - name: Set up Kubernetes Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Authenticate with Kubernetes
      - name: Authenticate to Kubernetes Cluster
        run: |
          echo "${{ secrets.KUBECONFIG_FILE }}" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml

      # Update Kubernetes YAML files and apply
      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
        run: |
          pwd
          ls -al
          sed -i "s|<user-service-image>|$DOCKER_IMAGE_PREFIX/user-service:${{ github.sha }}|g" api/UserService/user-service.yaml
          sed -i "s|<doctor-service-image>|$DOCKER_IMAGE_PREFIX/doctor-service:${{ github.sha }}|g" api/DoctorService/doctor-service.yaml
          sed -i "s|<feedback-service-image>|$DOCKER_IMAGE_PREFIX/feedback-service:${{ github.sha }}|g" api/FeedbackService/feedback-service.yaml
          sed -i "s|<appointment-service-image>|$DOCKER_IMAGE_PREFIX/appointment-service:${{ github.sha }}|g" api/AppointmentService/appointment-service.yaml

          # Apply the updated YAML files
          kubectl apply -f api/UserService/user-service.yaml
          kubectl apply -f api/DoctorService/doctor-service.yaml
          kubectl apply -f api/FeedbackService/feedback-service.yaml
          kubectl apply -f api/AppointmentService/appointment-service.yaml